import type { Metadata } from "next";
import localFont from "next/font/local";
import "./globals.css";
import { SideBar } from "./components/sideBar";
import { locales } from "@/config";

const geistSans = localFont({
  src: "./fonts/GeistVF.woff",
  variable: "--font-geist-sans",
  weight: "100 900",
});
const geistMono = localFont({
  src: "./fonts/GeistMonoVF.woff",
  variable: "--font-geist-mono",
  weight: "100 900",
});

export const metadata: Metadata = {
  title: "Next Note",
  description: "Generated by create next app",
};

// generateStaticParams 和动态路由一起使用，用于在构建时静态生成 locales 中配置的所有语言的路由
// 如 /[lng]/note/eidt 路由，将生成 /zh/note/eidt 和 /en/note/eidt 两个路由
export async function generateStaticParams() {
  return locales.map((lng) => ({ lng }))
}

export default async function RootLayout({
  children,
  params
}: Readonly<{
  children: React.ReactNode;
  params: Promise<{ lng: string }>
}>) {
  const { lng } = await params
  return (
    <html lang={lng}>
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <div className="flex flex-row min-w-[1080px]">
          <div className="min-w-[30%]">
            <SideBar />
          </div>
          <div className="dark:bg-slate-800 bg-white px-3 flex-1">{children}</div>
        </div>
      </body>
    </html>
  );
}
